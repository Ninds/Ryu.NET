name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
          - uses: actions/checkout@v2
          - name: Setup .NET Core 3.1
            uses: actions/setup-dotnet@v1
            with:
              dotnet-version: '3.1.101'
          - name: Setup .NET 5.0
            uses: actions/setup-dotnet@v1
            with:
              dotnet-version: '5.0.100-preview.6.20318.15'
          - name: DOTNET HACK
    #  https://github.com/actions/setup-dotnet/issues/25
            shell: pwsh
            run: |
                $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
                $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
                $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
                foreach ($dir in $directories) {
                  $from = $dir.FullName;
                  $to = "$root/$version";
                  Write-Host Copying from $from to $to;
                  Copy-Item "$from\*" $to -Recurse -Force;
                }
          
          - name: Install dependencies
            run: dotnet restore
          - name: Build
            run: dotnet build --configuration Release --no-restore
          - name: Test
            run: dotnet test Ryu.Net.UnitTests/bin/Release/netcoreapp3.1/Ryu.NET.UnitTests.dll
